/*normalize*/
*, *::before, *::after {
  box-sizing: border-box;
}
* {
  margin: 0;
}

body {
  font-family: var(--main-font), var(--fallback-fonts);
  font-size: 1.2rem;
  width: 100vw;
  height: 100vh;
  margin-top: 0.5rem;
  background-color: #F9F3EF;

  display: flex;
  flex-direction: column;
  gap: 3rem;
  align-items: center;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;

}

img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

input, button, textarea, select {
  font: inherit;
}

p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

p {
  text-wrap: pretty;
}
h1, h2, h3, h4, h5, h6 {
  text-wrap: balance;
}

/*inputs container*/
.inputs-container {
  margin-top: 2rem;
  width: 19vw;
  height: 30vh;

  display: grid;
  gap: 0.5rem;
  align-content: center;
  justify-content: center;

  & > * {
    width: 17vw;
    display: flex;
    justify-content: space-between;
  }
}


table {
  width: 40vw;
  height: 40vh;
  border: 2px solid black;
  letter-spacing: 1px;
  overflow: scroll;
}

caption {
  margin: 0 auto;
  width: 16ch;
}


td {
  border: 1px solid rgb(160 160 160);
  padding: 8px 10px;
}

.add {
  padding: 4px;
  font-size: 1.2rem;
  background-color: lightblue;
  border-radius: 7px;
  transition: 0.4s;
  
  &:hover {
    background-color: orange;
    color: white;
  }
}

.remove {
  padding: 4px;
  font-size: 1.2rem;
  background-color: orange;
  color: white;
  border-radius: 7px;
  transition: 0.4s;
  
  &:hover {
    background-color: lightblue;
    color: black;
  }
}

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
}

input,
textarea,
select,
button {
  width: 150px;
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}


input[type="checkbox"] {
  /*positioning*/
  position: absolute;
  left: -20px;
  bottom: 10px;

  /*appearance*/
  appearance: none;
  width: 1em;
  height: 1em;
  border: 1px solid gray;
  
  color: green;
}

input[type="checkbox"]::before {
  content: "âœ”";
  position: absolute;
  font-size: 1.2em;
  right: -1px;
  top: -0.3em;
  visibility: hidden;
}

input[type="checkbox"]:checked::before {
  visibility: visible;
}